!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
GTEST_DIR	Makefile	/^GTEST_DIR = \/home\/kent\/gtest$/;"	m
GTEST_HEADERS	Makefile	/^GTEST_HEADERS = $(GTEST_DIR)\/include\/gtest\/*.h \\$/;"	m
GTEST_SRCS_	Makefile	/^GTEST_SRCS_ = $(GTEST_DIR)\/src\/*.cc $(GTEST_DIR)\/src\/*.h $(GTEST_HEADERS)$/;"	m
PAGESIZE	stub/stub.c	12;"	d	file:
SetUp	dns_test.cc	/^void UT_DNS::SetUp()$/;"	f	class:UT_DNS
TESTS	Makefile	/^TESTS = ut$/;"	m
TEST_F	dns_test.cc	/^TEST_F(UT_DNS, 001)$/;"	f
TearDown	dns_test.cc	/^void UT_DNS::TearDown()$/;"	f	class:UT_DNS
USER_DIR	Makefile	/^USER_DIR = ..$/;"	m
UT_DNS	dns_test.cc	/^class UT_DNS : public ::testing::Test {$/;"	c	file:
address_p	dns_test.cc	/^char address_p[20];$/;"	v
conect_t	dns_test.cc	/^int conect_t;$/;"	v
connect_stub	dns_test.cc	/^int connect_stub(int sockfd, struct sockaddr *addr, socklen_t addrlen)$/;"	f
data	stub/stub.h	/^	unsigned char data[10];$/;"	m	struct:fun_stub
fun_stub	stub/stub.h	/^typedef struct fun_stub {$/;"	s
fun_stub	stub/stub.h	/^} fun_stub;$/;"	t	typeref:struct:fun_stub
function	stub/stub.h	/^	void * function;$/;"	m	struct:fun_stub
main	test_dns_example/test.c	/^int main(int argc, char *argv[])$/;"	f
stub	dns_test.cc	/^		struct fun_stub stub[10];$/;"	m	class:UT_DNS	typeref:struct:UT_DNS::fun_stub	file:
stub_reset	stub/stub.c	/^void stub_reset(fun_stub * target)$/;"	f
stub_set	stub/stub.c	/^void stub_set(fun_stub *tmp, void *func, void * func_stub)$/;"	f
